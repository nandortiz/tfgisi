# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET   /assets/*file                 controllers.Assets.versioned(path="/public", file: Asset)
 
# APIs in Controller
GET     /inicio                controllers.Inicio.index()

 ###
 #  summary: Crear una biblioteca. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
POST /bibliotecas       controllers.BibliotecaController.create(request:Request)

 ###
 #  summary: Obtener todas las bibliotecas. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
 GET /bibliotecas        controllers.BibliotecaController.retrieveAll()

 ###
 #  summary: Obtener una biblioteca. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
GET /bibliotecas/:id    controllers.BibliotecaController.retrieve(id:Int)

###
 #  summary: Eliminar una biblioteca. (DELETE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a eliminar.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
DELETE /bibliotecas/:id    controllers.BibliotecaController.delete(id:Int)

###
 #  summary: Actualizar una biblioteca. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
PUT /bibliotecas/:id    controllers.BibliotecaController.update(request:Request, id:Int)

###
 #  summary: Actualizar parcialmente una biblioteca. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioBiblioteca
 #      description: La biblioteca a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioBiblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioBiblioteca'
 ###
PATCH /bibliotecas/:id    controllers.BibliotecaController.modify(id:Int, request:Request)

###
 #  summary: Crear una sala. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: sala
 #      description: La sala a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Sala'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
POST /bibliotecas/:id/salas       controllers.SalaController.create(id:Int, request:Request)

###
 #  summary: Obtener todas las salas. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
 GET /bibliotecas/:id/salas/        controllers.SalaController.retrieveAll(id:Int)

 ###
 #  summary: Obtener una sala. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
GET /bibliotecas/:id/salas/:idSala    controllers.SalaController.retrieve( id:Int, idSala:Int)

###
 #  summary: Eliminar una sala. (DELETE)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
DELETE /bibliotecas/:id/salas/:idSala controllers.SalaController.delete(id:Int, idSala:Int)

###
 #  summary: Actualizar una sala. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: sala
 #      description: La sala a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Sala'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
PUT /bibliotecas/:id/salas/:idSala    controllers.SalaController.update(request:Request, id:Int, idSala:Int) #verificar ()