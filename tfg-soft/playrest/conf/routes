# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET   /assets/*file                 controllers.Assets.versioned(path="/public", file: Asset)
 
# APIs in Controller
GET     /inicio                controllers.Inicio.index()

 ###
 #  summary: Crear una biblioteca. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
POST /bibliotecas       controllers.BibliotecaController.create(request:Request)

 ###
 #  summary: Obtener todas las bibliotecas. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
 GET /bibliotecas        controllers.BibliotecaController.retrieveAll()

 ###
 #  summary: Obtener una biblioteca. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
GET /bibliotecas/:id    controllers.BibliotecaController.retrieve(id:Int)

###
 #  summary: Eliminar una biblioteca. (DELETE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a eliminar.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
DELETE /bibliotecas/:id    controllers.BibliotecaController.delete(id:Int)

###
 #  summary: Actualizar una biblioteca. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: biblioteca
 #      description: La biblioteca a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Biblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Biblioteca'
 ###
PUT /bibliotecas/:id    controllers.BibliotecaController.update(request:Request, id:Int)

###
 #  summary: Actualizar parcialmente una biblioteca. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioBiblioteca
 #      description: La biblioteca a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioBiblioteca'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioBiblioteca'
 ###
PATCH /bibliotecas/:id    controllers.BibliotecaController.modify(id:Int, request:Request)

###
 #  summary: Crear una sala. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: sala
 #      description: La sala a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Sala'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
POST /bibliotecas/:id/salas       controllers.SalaController.create(id:Int, request:Request)

###
 #  summary: Obtener todas las salas. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
 GET /bibliotecas/:id/salas/        controllers.SalaController.retrieveAll(id:Int)

 ###
 #  summary: Obtener una sala. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
GET /bibliotecas/:id/salas/:idSala    controllers.SalaController.retrieve( id:Int, idSala:Int)

###
 #  summary: Eliminar una sala. (DELETE)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
DELETE /bibliotecas/:id/salas/:idSala controllers.SalaController.delete(id:Int, idSala:Int)

###
 #  summary: Actualizar una sala. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: sala
 #      description: La sala a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Sala'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Sala'
 ###
PUT /salas/:idSala    controllers.SalaController.update(request:Request, idSala:Int)

###
 #  summary: Actualizar parcialmente una sala. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioAforoSala
 #      description: La sala a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioAforoSala'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioAforoSala'
 ###
PATCH /salas/:idSala    controllers.SalaController.modify(idSala:Int, request:Request)

###
 #  summary: Crear un puesto. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: puesto
 #      description: El puesto a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Puesto'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Puesto'
 ###
POST /bibliotecas/:id/puestos       controllers.PuestoController.create(id:Int, request:Request)

###
 #  summary: Obtener todos los puestos. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Puesto'
 ###
 GET /bibliotecas/:id/puestos/        controllers.PuestoController.retrieveAll(id:Int)

 ###
 #  summary: Obtener un puesto. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Puesto'
 ###
GET /bibliotecas/:id/puestos/:idPuesto    controllers.PuestoController.retrieve( id:Int, idPuesto:Int)

###
 #  summary: Eliminar un puesto. (DELETE)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Puesto'
 ###
DELETE /bibliotecas/:id/puestos/:idPuesto controllers.PuestoController.delete(id:Int, idPuesto:Int)

###
 #  summary: Actualizar un puesto. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: puesto
 #      description: El puesto a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Puesto'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Puesto'
 ###
PUT /puestos/:idPuesto    controllers.PuestoController.update(request:Request, idPuesto:Int)

###
 #  summary: Actualizar parcialmente un puesto. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioInfoPuesto
 #      description: El puesto a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioInfoPuesto'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioInfoPuesto'
 ###
PATCH /puestos/:idPuesto    controllers.PuestoController.modify(idPuesto:Int, request:Request)

###
 #  summary: Crear un ordenador. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: ordenador
 #      description: El ordenador a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Ordenador'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Ordenador'
 ###
POST /bibliotecas/:id/ordenadores       controllers.OrdenadorController.create(id:Int, request:Request)

###
 #  summary: Obtener todos los ordenadores. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Ordenador'
 ###
 GET /bibliotecas/:id/ordenadores/        controllers.OrdenadorController.retrieveAll(id:Int)

 ###
 #  summary: Obtener un ordenador. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Ordenador'
 ###
GET /bibliotecas/:id/ordenadores/:idOrdenador    controllers.OrdenadorController.retrieve( id:Int, idOrdenador:Int)

###
 #  summary: Eliminar un ordenador. (DELETE)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Ordenador'
 ###
DELETE /bibliotecas/:id/ordenadores/:idOrdenador controllers.OrdenadorController.delete(id:Int, idOrdenador:Int)

###
 #  summary: Actualizar un ordenador. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: ordenador
 #      description: El ordenador a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Ordenador'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Ordenador'
 ###
PUT /ordenadores/:idOrdenador    controllers.OrdenadorController.update(request:Request, idOrdenador:Int)

###
 #  summary: Actualizar parcialmente un ordenador. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioNumSerieOrdenador
 #      description: El Ordenador a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioNumSerieOrdenador'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioNumSerieOrdenador'
 ###
PATCH /ordenadores/:idOrdenador    controllers.OrdenadorController.modify(idOrdenador:Int, request:Request)

###
 #  summary: Crear un libro. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: libro
 #      description: El libro a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Libro'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Libro'
 ###
POST /bibliotecas/:id/libros       controllers.LibroController.create(id:Int, request:Request)

###
 #  summary: Obtener todos los libros. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Libro'
 ###
 GET /bibliotecas/:id/libros/        controllers.LibroController.retrieveAll(id:Int)

 ###
 #  summary: Obtener un libro. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Libro'
 ###
GET /bibliotecas/:id/libros/:idLibro    controllers.LibroController.retrieve( id:Int, idLibro:Int)

###
 #  summary: Eliminar un libro. (DELETE)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Libro'
 ###
DELETE /bibliotecas/:id/libros/:idLibro controllers.LibroController.delete(id:Int, idLibro:Int)

###
 #  summary: Actualizar un libro. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: libro
 #      description: El libro a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Libro'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Libro'
 ###
PUT /libros/:idLibro    controllers.LibroController.update(request:Request, idLibro:Int)

###
 #  summary: Actualizar parcialmente un libro. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioIsbnLibro
 #      description: El libro a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioIsbnLibro'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioIsbnLibro'
 ###
PATCH /libros/:idLibro    controllers.LibroController.modify(idLibro:Int, request:Request)

###
 #  summary: Crear un usuario. (POST)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: usuario
 #      description: El usuario a crear.
 #      schema:
 #         $ref: '#/definitions/entities.Usuario'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Usuario'
 ###
POST /usuarios       controllers.UsuarioController.create(request:Request)

 ###
 #  summary: Obtener todos los usuarios. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Usuario'
 ###
 GET /usuarios        controllers.UsuarioController.retrieveAll()

 ###
 #  summary: Obtener un usuario. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Usuario'
 ###
GET /usuarios/:id    controllers.UsuarioController.retrieve(id:Int)

###
 #  summary: Eliminar un usuario. (DELETE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: usuario
 #      description: El usuario a eliminar.
 #      schema:
 #         $ref: '#/definitions/entities.Usuario'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Usuario'
 ###
DELETE /usuarios/:id    controllers.UsuarioController.delete(id:Int)

###
 #  summary: Actualizar un usuario. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: usuario
 #      description: El usuario a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Usuario'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Usuario'
 ###
PUT /usuarios/:id    controllers.UsuarioController.update(request:Request, id:Int)

###
 #  summary: Actualizar parcialmente una usuario. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioUsuario
 #      description: El usuario a realizar
 #      schema:
 #         $ref: '#/definitions/entities.CambioGrado'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.CambioGrado'
 ###
PATCH /usuarios/:id     controllers.UsuarioController.modify(id:Int, request:Request)


###
  #  summary: Crear una reserva. (POST)
  #  consumes:
  #    - application/json
  #  parameters:
  #    - in: body
  #      name: reserva
  #      description: La reserva a crear.
  #      schema:
  #         $ref: '#/definitions/entities.Reserva'
  #  responses:
  #    201:
  #      description: success
  #      content:application/json:
  #      schema:
  #        $ref: '#/definitions/entities.Reserva'
  ###
POST /reservas      controllers.ReservaController.create(request:Request)

 ###
 #  summary: Obtener todas las reservas. (GET ALL)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Reserva'
 ###
 GET /reservas        controllers.ReservaController.retrieveAll()

 ###
 #  summary: Obtener una reserva. (GET)
 #  consumes:
 #    - application/json
 #
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Reserva'
 ###
GET /reservas/:reservaID    controllers.ReservaController.retrieve(reservaID:Int)

###
 #  summary: Eliminar una reserva. (DELETE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: reserva
 #      description: La reserva a eliminar.
 #      schema:
 #         $ref: '#/definitions/entities.Reserva'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Reserva'
 ###
DELETE /reservas/:reservaID    controllers.ReservaController.delete(reservaID:Int)

###
 #  summary: Actualizar una reserva. (UPDATE)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: reserva
 #      description: La reserva a actualizar.
 #      schema:
 #         $ref: '#/definitions/entities.Reserva'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Reserva'
 ###
PUT /reservas/:reservaID    controllers.ReservaController.update(request:Request, reservaID:Int)

###
 #  summary: Actualizar parcialmente una reserva. (PATCH)
 #  consumes:
 #    - application/json
 #  parameters:
 #    - in: body
 #      name: cambioReserva
 #      description: La reserva a realizar
 #      schema:
 #         $ref: '#/definitions/entities.Reserva'
 #  responses:
 #    201:
 #      description: success
 #      content:application/json:
 #      schema:
 #        $ref: '#/definitions/entities.Reserva'
 ###
PATCH /reservas/:reservaID     controllers.ReservaController.modify(reservaID:Int, request:Request)
